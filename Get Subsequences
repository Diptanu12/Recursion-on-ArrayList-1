Get Subsequences
Given a string, we have to find out all subsequences of it.

You have to complete the function generateSubsequence that returns a list of all subsequences sorted lexically and it should not contain empty strings.

Note: A String is a subsequence of a given String, that is generated by deleting some character of a given string without changing its order.

Input Format
The first line of input contains a string s

Output Format
print all the subsequences of given string in sorted order

Example
Input

abc
Output

a
ab
abc
ac
b
bc
c
Explanation

The subsequences of abc printed in lexically sorted order

Constraints
1 <= s.length <= 100
Topics
Recursion
Strings
Companies


import java.io.*;
import java.util.*;

public class Main {
    public static ArrayList<String> generateSubsequences(String str)
    {
      ArrayList<String> result = new ArrayList<>();
        generateSubsequencesHelper(str, 0, "", result);
        Collections.sort(result); // Sort the result lexically
        return result;
    }

    private static void generateSubsequencesHelper(String str, int index, String current, ArrayList<String> result) {
        if (index == str.length()) {
            if (!current.isEmpty()) {
                result.add(current); // Add non-empty subsequences to result
            }
            return;
        }
        // Include current character
        generateSubsequencesHelper(str, index + 1, current + str.charAt(index), result);
        // Exclude current character
        generateSubsequencesHelper(str, index + 1, current, result);
    }
	
	public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s;
        s = sc.nextLine();
        ArrayList<String> res = generateSubsequences(s);
        for(int i=0;i<res.size();i++){
            System.out.println(res.get(i));
        }
    }
}
